name: CI/CD Docker Image Deployment

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      # - name: Log in to DockerHub
        # uses: docker/login-action@v3
        # with:
        #   username: ${{ secrets.DOCKER_USERNAME }}
        #   password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Version
        id: version
        run: |
          git fetch --tags
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
            echo "Tag detected: $VERSION"
          else
            CURRENT_VERSION=$(git describe --tags --match "v*" --abbrev=0 2>/dev/null || echo "v0.0.0")
            IFS='.' read -r MAJOR MINOR PATCH <<<"${CURRENT_VERSION#v}"
            if git diff --quiet HEAD $(git merge-base HEAD "main"); then
              # Handle pre-release versions
              PRE_RELEASE_BASE="v${MAJOR}.${MINOR}.${PATCH}-alpha"
              EXISTING_TAGS=$(git tag --list "${PRE_RELEASE_BASE}.*")
              if [[ -n "$EXISTING_TAGS" ]]; then
                LAST_PRE_RELEASE=$(echo "$EXISTING_TAGS" | sort -V | tail -n 1)
                SUFFIX=${LAST_PRE_RELEASE##*-alpha.}
                SUFFIX=$((SUFFIX + 1))
              else
                SUFFIX=1
              fi
              VERSION="${PRE_RELEASE_BASE}.${SUFFIX}"
            else
              # Increment patch version for significant changes
              PATCH=$((PATCH + 1))
              VERSION="v${MAJOR}.${MINOR}.${PATCH}"
            fi
            echo "New version calculated: $VERSION"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # - name: Build and Push Docker Image
      #   uses: docker/build-push-action@v6
      #   with:
      #     push: true
      #     tags: |
      #       ${{ secrets.DOCKER_USERNAME }}/devops-fusion-webapi:${{ env.VERSION }}
      #       ${{ secrets.DOCKER_USERNAME }}/devops-fusion-webapi:latest
      #     context: ./devops.fusion.webapi
      #     file: ./devops.fusion.webapi/Dockerfile
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ghcr.io/username/fusion-webapi:${{ env.VERSION }}
            ghcr.io/username/fusion-webapi:latest
          context: ./devops.fusion.webapi
          file: ./devops.fusion.webapi/Dockerfile
        

      - name: Tag and Push New Version
        if: github.ref == 'refs/heads/main'
        run: |
          if [[ -n "${{ env.VERSION }}" ]]; then
            git tag -a "${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
            git push origin "${{ env.VERSION }}"
          fi
