name: CI/CD Docker Image Deployment

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Current Version
        id: version
        run: |
          # Fetch all tags to ensure they are available locally
          git fetch --tags
          VERSION=$(git describe --tags --match "v*" --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "CURRENT_VERSION=${VERSION#v}" >> $GITHUB_ENV
          echo "CURRENT_VERSION=$VERSION"

      - name: Calculate New Version
        id: new_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            NEW_VERSION="${GITHUB_REF#refs/tags/}"
          else
            IFS='.' read -r MAJOR MINOR PATCH <<<"${CURRENT_VERSION}"
            PATCH=$((PATCH + 1))
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          fi
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version is $NEW_VERSION"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6.10.0
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/devops-fusion-webapi:v${{ env.NEW_VERSION }}
          context: ./devops.fusion.webapi
          file: ./devops.fusion.webapi/Dockerfile

      - name: Tag and Push New Version
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release version v${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"
